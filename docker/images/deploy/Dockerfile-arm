ARG ARCH
FROM balenalib/${ARCH}-debian-golang
ARG URL_DEPLOY
ARG PYPI_USER
ARG PYPI_PASSWD
RUN [ "cross-build-start" ]

RUN mkdir -p /io
ADD . /io

# Install Python 2.7/3.5 runtime and development tools
RUN set -ex \
  && apt-get update \
  && apt-get install -y --no-install-recommends \
  python3 \
  python3-dev \
  python-dev \
  ca-certificates \
  libexpat1 \
  libffi6 \
  libgdbm3 \
  libreadline7 \
  libsqlite3-0 \
  libssl1.1 \
  netbase \
  wget \
  curl \
  libpcre3-dev \
  python-pip \
  python3-pip \
  python-setuptools \
  python3-setuptools \
  python3-venv \
  python-wheel \
  python3-wheel

# # Install Python 3.7
# # runtime dependencies
# ENV PYTHON_VERSION 3.7.1
# RUN set -ex \
#   && buildDeps=" \
#   libexpat1-dev \
#   tcl-dev \
#   tk-dev \
#   # as of Stretch, "gpg" is no longer included by default
#   $(command -v gpg > /dev/null || echo 'gnupg dirmngr') \
#   " \
#   && apt-get install -y $buildDeps --no-install-recommends \
#   \
#   && wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz" \
#   && wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc" \
#   && export GNUPGHOME="$(mktemp -d)" \
#   && for server in ha.pool.sks-keyservers.net \
#   hkp://p80.pool.sks-keyservers.net:80 \
#   keyserver.ubuntu.com \
#   hkp://keyserver.ubuntu.com:80 ;do\
#   gpg --keyserver "$server" --recv-keys 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D;done \
#   && gpg --batch --verify python.tar.xz.asc python.tar.xz \
#   && rm -rf "$GNUPGHOME" python.tar.xz.asc \
#   && mkdir -p /usr/src/python \
#   && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \
#   && rm python.tar.xz \
#   \
#   && cd /usr/src/python \
#   && gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
#   && ./configure \
#   --prefix=/usr \
#   --build="$gnuArch" \
#   --enable-loadable-sqlite-extensions \
#   --enable-shared \
#   --with-system-expat \
#   --with-system-ffi \
#   --without-ensurepip \
#   && make -j "$(nproc)" \
#   && make altinstall \
#   && ldconfig \
#   \
#   && find /usr/local -depth \
#   \( \
#   \( -type d -a \( -name test -o -name tests \) \) \
#   -o \
#   \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \) \
#   \) -exec rm -rf '{}' + \
#   && rm -rf /usr/src/python

# # Install Python 3.6
# # runtime dependencies
# ENV PYTHON_VERSION 3.6.7
# RUN set -ex \
#   && buildDeps=" \
#   libexpat1-dev \
#   tcl-dev \
#   tk-dev \
#   # as of Stretch, "gpg" is no longer included by default
#   $(command -v gpg > /dev/null || echo 'gnupg dirmngr') \
#   " \
#   && apt-get install -y $buildDeps --no-install-recommends \
#   \
#   && wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz" \
#   && wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc" \
#   && export GNUPGHOME="$(mktemp -d)" \
#   && for server in ha.pool.sks-keyservers.net \
#   hkp://p80.pool.sks-keyservers.net:80 \
#   keyserver.ubuntu.com \
#   hkp://keyserver.ubuntu.com:80 ;do\
#   gpg --keyserver "$server" --recv-keys 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D;done \
#   && gpg --batch --verify python.tar.xz.asc python.tar.xz \
#   && rm -rf "$GNUPGHOME" python.tar.xz.asc \
#   && mkdir -p /usr/src/python \
#   && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \
#   && rm python.tar.xz \
#   \
#   && cd /usr/src/python \
#   && gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
#   && ./configure \
#   --prefix=/usr \
#   --build="$gnuArch" \
#   --enable-loadable-sqlite-extensions \
#   --enable-shared \
#   --with-system-expat \
#   --with-system-ffi \
#   --without-ensurepip \
#   && make -j "$(nproc)" \
#   && make altinstall \
#   && ldconfig \
#   \
#   && find /usr/local -depth \
#   \( \
#   \( -type d -a \( -name test -o -name tests \) \) \
#   -o \
#   \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \) \
#   \) -exec rm -rf '{}' + \
#   && rm -rf /usr/src/python

# # Install Python 3.4
# # runtime dependencies
# ENV PYTHON_VERSION 3.4.9
# RUN set -ex \
#   && buildDeps=" \
#   # as of Stretch, "gpg" is no longer included by default
#   $(command -v gpg > /dev/null || echo 'gnupg dirmngr') \
#   " \
#   && apt-get install -y libssl1.0-dev $buildDeps --no-install-recommends \
#   \
#   && wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz" \
#   && wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc" \
#   && export GNUPGHOME="$(mktemp -d)" \
#   && for server in ha.pool.sks-keyservers.net \
#   hkp://p80.pool.sks-keyservers.net:80 \
#   keyserver.ubuntu.com \
#   hkp://keyserver.ubuntu.com:80 ;do\
#   gpg --keyserver "$server" --recv-keys 97FC712E4C024BBEA48A61ED3A5CA953F73C700D;done \
#   && gpg --batch --verify python.tar.xz.asc python.tar.xz \
#   && rm -rf "$GNUPGHOME" python.tar.xz.asc \
#   && mkdir -p /usr/src/python \
#   && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \
#   && rm python.tar.xz \
#   \
#   && cd /usr/src/python \
#   && gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
#   && ./configure \
#   --prefix=/usr \
#   --build="$gnuArch" \
#   --enable-loadable-sqlite-extensions \
#   --enable-shared \
#   --with-system-expat \
#   --with-system-ffi \
#   --without-ensurepip \
#   && make -j "$(nproc)" \
#   && make altinstall \
#   && ldconfig \
#   \
#   && apt-get install -y libssl-dev \
#   && apt-get clean \
#   && rm -rf /var/lib/apt/lists/* \
#   \
#   && find /usr/local -depth \
#   \( \
#   \( -type d -a \( -name test -o -name tests \) \) \
#   -o \
#   \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \) \
#   \) -exec rm -rf '{}' + \
#   && rm -rf /usr/src/python

# # if this is called "PIP_VERSION", pip explodes with "ValueError: invalid truth value '<VERSION>'"
# ENV PYTHON_PIP_VERSION 18.1
# RUN set -ex; \
#   \
#   wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'; \
#   \
#   python3.7 get-pip.py \
#   --disable-pip-version-check \
#   --no-cache-dir \
#   "pip==$PYTHON_PIP_VERSION" \
#   ; \
#   python3.6 get-pip.py \
#   --disable-pip-version-check \
#   --no-cache-dir \
#   "pip==$PYTHON_PIP_VERSION" \
#   ; \
#   python3.5 get-pip.py \
#   --disable-pip-version-check \
#   --no-cache-dir \
#   "pip==$PYTHON_PIP_VERSION" \
#   ; \
#   python3.4 get-pip.py \
#   --disable-pip-version-check \
#   --no-cache-dir \
#   "pip==$PYTHON_PIP_VERSION" \
#   ; \
#   find /usr/local -depth \
#   \( \
#   \( -type d -a \( -name test -o -name tests \) \) \
#   -o \
#   \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \) \
#   \) -exec rm -rf '{}' +; \
#   rm -f get-pip.py

# Install packages in PIP_PACKAGES

# Python 2.7
RUN pip install --upgrade  setuptools tox-travis wheel \
  && pip install -r "/io/requirements.dev.txt" \
  && pip install -r "/io/lib/skyapi/requirements.txt" \
  && pip install -r "/io/lib/skyapi/test-requirements.txt" 

# # Python 3.4
# RUN python3.4 -m pip install --upgrade  setuptools tox-travis auditwheel \
#   && python3.4 -m pip install "/io/requirements.dev.txt" \
#   && python3.4 -m pip install "/io/lib/skyapi/requirements.txt" \
#   && python3.4 -m pip install "/io/lib/skyapi/test-requirements.txt" 

# Python 3.5
RUN pip3 install --upgrade  setuptools tox-travis wheel  \
  && pip3 install -r "/io/requirements.dev.txt" \
  && pip3 install -r "/io/lib/skyapi/requirements.txt" \
  && pip3 install -r "/io/lib/skyapi/test-requirements.txt" 

# # Python 3.6
# RUN python3.6 -m pip install --upgrade  setuptools tox-travis auditwheel \
#   && python3.6 -m pip install "/io/requirements.dev.txt" \
#   && python3.6 -m pip install "/io/lib/skyapi/requirements.txt" \
#   && python3.6 -m pip install "/io/lib/skyapi/test-requirements.txt" 


# # Python 3.7
# RUN python3.7 -m pip install --upgrade  setuptools tox-travis auditwheel \
#   && python3.7 -m pip install "/io/requirements.dev.txt" \
#   && python3.7 -m pip install "/io/lib/skyapi/requirements.txt" \
#   && python3.7 -m pip install "/io/lib/skyapi/test-requirements.txt" 

RUN mkdir swig_build && \
  cd swig_build && \
  curl -sL -o "swig-3.0.12.tar.gz" http://prdownloads.sourceforge.net/swig/swig-3.0.12.tar.gz && \
  tar -zxf swig-3.0.12.tar.gz && \
  cd swig-3.0.12 && \
  ./configure --prefix=/usr && \
  make && \
  make install && \
  cd ../../ && \
  rm -rf swig_build

ENV CGO_ENABLE=1

RUN go version
RUN go env
RUN go get github.com/gz-c/gox
RUN cd /io && git submodule update --init --recursive 
RUN make -C /io/gopath/src/github.com/skycoin/libskycoin dep
RUN make -C /io build-libc
RUN make -C /io build-swig 
RUN sh /io/.circleci/circle_wheels_arm.sh

RUN ls /io/wheelhouse
RUN mkdir -p /io/dist
RUN cp -v /io/wheelhouse/* /io/dist
RUN pip install twine
ENV TWINE_PATH=twine
RUN sh /io/.circleci/upload_pypi.sh

RUN [ "cross-build-end" ]

WORKDIR /io